<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAP00207" failures="0" tests="4" name="create" time="0.066" errors="0" timestamp="2024-02-26T11:43:20 IST">
  <testcase classname="com.framework.Baseclass.InvokeSetup" name="@BeforeMethod beforeMethod" time="-1.708928000918E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated beforeMethod.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated beforeMethod.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.framework.Baseclass.InvokeSetup" name="@AfterMethod afterMethod" time="-1.708928000934E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.framework.Baseclass.InvokeSetup" name="@BeforeMethod beforeMethod" time="-1.708928000935E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.framework.Baseclass.InvokeSetup" name="@AfterMethod afterMethod" time="-1.708928000939E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.framework.Baseclass.InvokeSetup" name="@BeforeMethod beforeMethod" time="-1.708928000942E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated beforeMethod.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated beforeMethod.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.framework.Baseclass.InvokeSetup" name="@AfterMethod afterMethod" time="-1.708928000945E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.framework.Baseclass.InvokeSetup" name="@BeforeMethod beforeMethod" time="-1.708928000946E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.framework.Baseclass.InvokeSetup" name="@AfterMethod afterMethod" time="-1.708928000949E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.playbook.testcases.Tc05" name="m1" time="0.001">
    <skipped/>
  </testcase> <!-- m1 -->
  <testcase classname="com.playbook.testcases.Tc05" name="m2" time="0.0">
    <skipped/>
  </testcase> <!-- m2 -->
  <testcase classname="com.playbook.testcases.Tc04" name="m3" time="0.0">
    <skipped/>
  </testcase> <!-- m3 -->
  <testcase classname="com.playbook.testcases.Tc04" name="m4" time="0.0">
    <skipped/>
  </testcase> <!-- m4 -->
</testsuite> <!-- create -->
